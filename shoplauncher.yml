---
- name: Create shoplauncher instances
  hosts: localhost
  gather_facts: False
  vars_files:
    - gce_vars/auth
    - gce_vars/machines
    - gce_vars/zone
  tasks:
    - name: create a disk mapped for shoplauncher App instance 1 - Centos 8
      gcp_compute_disk:
        name: shoplauncher-disk-instance1
        size_gb: 50
        type: pd-ssd
        source_image: "{{ image }}"
        zone: "{{ zone.za }}"
        project: "{{ gcp_project }}"
        auth_kind: "{{ gcp_cred_kind }}"
        service_account_file: "{{ gcp_cred_file }}"
        state: present
      register: shoplauncher_instance1

    - name: create a disk mapped for shoplauncher App instance 2 - Centos 8
      gcp_compute_disk:
        name: shoplauncher-disk-instance2
        size_gb: 50
        type: pd-ssd
        source_image: "{{ image }}"
        zone: "{{ zone.za }}"
        project: "{{ gcp_project }}"
        auth_kind: "{{ gcp_cred_kind }}"
        service_account_file: "{{ gcp_cred_file }}"
        state: present
      register: shoplauncher_instance2

    - name: create a disk mapped for shoplauncher App instance 3 - Centos 8
      gcp_compute_disk:
        name: shoplauncher-disk-instance3
        size_gb: 50
        type: pd-ssd
        source_image: "{{ image }}"
        zone: "{{ zone.za }}"
        project: "{{ gcp_project }}"
        auth_kind: "{{ gcp_cred_kind }}"
        service_account_file: "{{ gcp_cred_file }}"
        state: present
      register: shoplauncher_instance3

    - name: create a VPC shoplauncher network
      gcp_compute_network:
        name: stockchecker-subnetwork
        auto_create_subnetworks: 'true'
        project: "{{ gcp_project }}"
        auth_kind: "{{ gcp_cred_kind }}"
        service_account_file: "{{ gcp_cred_file }}"
        state: present
      register: network

    - name: create a firewall rules for shoplauncher app
      gcp_compute_firewall:
        name: shoplauncherapp-fw-ports
        network: "{{ network }}"
        allowed:
          - ip_protocol: icmp
          - ip_protocol: tcp
            ports:
              - '22'
              - '80'
              - '443'
        target_tags:
          - shoplauncher
        source_tags:
          - management
          - stockcheck
          - greeneagle
          - redis
          - elasticsearch
        project: "{{ gcp_project }}"
        auth_kind: "{{ gcp_cred_kind }}"
        service_account_file: "{{ gcp_cred_file }}"
        state: present
      register: firewall

    - name: create the shoplauncher app instance 1
      gcp_compute_instance:
        name: "{{ sl_zonea }}"
        machine_type: "{{ machine_type.shoplauncher }}"
        disks:
          - index: 0
            auto_delete: 'no'
            boot: 'true'
            source: "{{ shoplauncher_instance1 }}"
        labels:
          environment: shoplauncherprod
        network_interfaces:
          - network: "{{ network }}"
        tags:
          items:
            - shoplauncher
        metadata:
          ssh_user: "{{ ssh_user }}"
          ssh_key: "{{ ssh_key }}"
        zone: "{{ zone.za }}"
        project: "{{ gcp_project }}"
        auth_kind: "{{ gcp_cred_kind }}"
        service_account_file: "{{ gcp_cred_file }}"
        state: present
      register: shoplauncherappinstance1

    - name: create the shoplauncher app instance 2
      gcp_compute_instance:
        name: "{{ sl_zoneb }}"
        machine_type: "{{ machine_type.shoplauncher }}"
        disks:
          - index: 0
            auto_delete: 'no'
            boot: 'true'
            source: "{{ shoplauncher_instance2 }}"
        network_interfaces:
          - network: "{{ network }}"
        tags:
          items:
            - shoplauncher
        metadata:
          ssh_user: "{{ ssh_user }}"
          ssh_key: "{{ ssh_key }}"
        zone: "{{ zone.za }}"
        project: "{{ gcp_project }}"
        auth_kind: "{{ gcp_cred_kind }}"
        service_account_file: "{{ gcp_cred_file }}"
        state: present
      register: shoplauncherappinstance2


    - name: create the shoplauncher app instance 3
      gcp_compute_instance:
        name: "{{ sl_zonec }}"
        machine_type: "{{ machine_type.shoplauncher }}"
        disks:
          - index: 0
            auto_delete: 'no'
            boot: 'true'
            source: "{{ shoplauncher_instance3 }}"
        network_interfaces:
          - network: "{{ network }}"
        tags:
          items:
            - shoplauncher
        metadata:
          ssh_user: "{{ ssh_user }}"
          ssh_key: "{{ ssh_key }}"
        zone: "{{ zone.za }}"
        project: "{{ gcp_project }}"
        auth_kind: "{{ gcp_cred_kind }}"
        service_account_file: "{{ gcp_cred_file }}"
        state: present
      register: shoplauncherappinstance3

    - debug: var=shoplauncherappinstance1.networkInterfaces[0].networkIP
    - debug: var=shoplauncherappinstance2.networkInterfaces[0].networkIP
    - debug: var=shoplauncherappinstance3.networkInterfaces[0].networkIP

    - name: Add instance1 to group shoplaunchererapp
      add_host:
        name: "{{ shoplauncherappinstance1.networkInterfaces[0].networkIP }}"
        groups: shoplaunchererapp

    - name: Add instance2 to group shoplaunchererapp
      add_host:
        name: "{{ shoplauncherappinstance2.networkInterfaces[0].networkIP }}"
        groups: shoplaunchererapp

    - name: Add instance3 to group shoplaunchererapp
      add_host:
        name: "{{ shoplauncherappinstance3.networkInterfaces[0].networkIP }}"
        groups: shoplaunchererapp

  post_tasks:
    - name: Wait for SSH for instance1
      wait_for:
        delay: 30
        host: "{{ shoplauncherappinstance1.networkInterfaces[0].networkIP }}"
        port: 22
        state: started
        timeout: 120

    - name: Wait for SSH for instance2
      wait_for:
        delay: 30
        host: "{{ shoplauncherappinstance2.networkInterfaces[0].networkIP }}"
        port: 22
        state: started
        timeout: 120

    - name: Wait for SSH for instance3
      wait_for:
        delay: 30
        host: "{{ shoplauncherappinstance3.networkInterfaces[0].networkIP }}"
        port: 22
        state: started
        timeout: 120

- hosts: shoplaunchererapp
  roles:
    - apache
    - systemtools
    #- shoplauncherapp
  gather_facts: False
  become: true
  vars:
    ansible_user: belloau
    ansible_ssh_private_key_file: ~/.ssh/id_rsa.pub
  tasks:
    - name: Install apache on hosts
      dnf:
        name:
          - httpd
          - rsync
        state: present

    - name: copying keys for manyondoma
      authorized_key:
        user: mndoma
        key: "{{ lookup('file', '/data/keys/id_mndoma.pub') }}"

    - name: copying keys for chukwudi
      authorized_key:
        user: chukwudi
        key: "{{ lookup('file', '/data/keys/id_chukwudi.pub') }}"
        state: present

    - name: adding sudoers for webadmin
      template:
        src: templates/webadmin_sudoers.j2
        dest: /etc/sudoers.d/webadmin_sudoers

    - name: adding sudoers for webadmin
      template:
        src: templates/sysadmin_sudoers.j2
        dest: /etc/sudoers.d/sysadmin_sudoers

    - name: ensuring webroot directory
      file:
        path: /var/www/html/frontend/web
        state: directory
        mode: '0755'

    - name: update apache configs
      template:
        src: templates/httpd.conf.j2
        dest: /etc/httpd/conf/httpd.conf
      notify: restart apache

    - name: Install PHPFM repos
      dnf:
        name: "http://rpms.remirepo.net/enterprise/remi-release-8.rpm"
        disable_gpg_check: True
        state: present

    - name: Enable the PHPFM repos
      dnf:
        name: "@php:remi-7.4"
        state: present

    - name: Installing PHP packages
      dnf:
        name:
          - php
          - php-fpm
          - php-gd
          - php-mysqlnd
        state: present

    - name: Starting the Php-fpm service
      systemd:
        name: php-fpm
        state: started
        enabled: yes

    - name: sample php files
      template:
        src: templates/index.php.j2
        dest: /var/www/html/frontend/web/index.php

  handlers:
    - name: restart apache
      systemd:
        name: httpd
        state: restarted
